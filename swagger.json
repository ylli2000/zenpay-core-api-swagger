{
  "openapi": "3.0.4",
  "info": {
    "title": "ZenPay Core APIs",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/{identifier}/accounting-partners/{accountingPartner}/{customerId}/authorize-url": {
      "get": {
        "tags": [
          "AccountingPartners"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountingPartner",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "NotSet",
                "Myob",
                "Xero",
                "QuickBooks"
              ],
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/accounting-partners/{accountingPartner}/{customerId}": {
      "post": {
        "tags": [
          "AccountingPartners"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountingPartner",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "NotSet",
                "Myob",
                "Xero",
                "QuickBooks"
              ],
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountingPartnerRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountingPartnerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountingPartnerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountingPartnerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "AccountingPartners"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountingPartner",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "NotSet",
                "Myob",
                "Xero",
                "QuickBooks"
              ],
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/accounting-partners/{accountingPartner}/{customerId}/payment-accounts": {
      "get": {
        "tags": [
          "AccountingPartners"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountingPartner",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "NotSet",
                "Myob",
                "Xero",
                "QuickBooks"
              ],
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/accounting-partners/{accountingPartner}/{customerId}/expense-accounts": {
      "get": {
        "tags": [
          "AccountingPartners"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountingPartner",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "NotSet",
                "Myob",
                "Xero",
                "QuickBooks"
              ],
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/accounting-partners/{accountingPartner}/{customerId}/accounts": {
      "post": {
        "tags": [
          "AccountingPartners"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountingPartner",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "NotSet",
                "Myob",
                "Xero",
                "QuickBooks"
              ],
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAccountsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAccountsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAccountsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAccountsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showVerified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "showAuthorized",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageOffset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageLimit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAccountItemQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAccountItemQueryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAccountItemQueryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/accounts/{id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showVerified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "showAuthorized",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAccountItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAccountItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAccountItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/accounts/cards": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddCardRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddCardResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCardResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/accounts/banks": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddBankRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBankRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBankRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddBankRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddBankResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBankResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBankResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/accounts/paytos": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPayToRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPayToRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPayToRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPayToRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddPayToResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPayToResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPayToResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/accounts/{id}/remove": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/accounts/{id}/verify": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyAccountRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyAccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyAccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationAccountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationAccountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-request": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/callbacks/{module}/{merchantUniqueReference}": {
      "post": {
        "tags": [
          "Callbacks"
        ],
        "operationId": "CallbackPost",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "TillPayments"
              ],
              "type": "string"
            }
          },
          {
            "name": "merchantUniqueReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showPoints",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageOffset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageLimit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseQueryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseQueryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showPoints",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageOffset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageLimit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseQueryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseQueryResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/idverifications": {
      "put": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerIdVerificationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerIdVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerIdVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerIdVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerIdVerificationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerIdVerificationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerIdVerificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/merchants": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerMerchantLinkFilterRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerMerchantLinkFilterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerMerchantLinkFilterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerMerchantLinkFilterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkItemQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkItemQueryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkItemQueryResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetupRecurringRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupRecurringRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupRecurringRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetupRecurringRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkResponseQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkResponseQueryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkResponseQueryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/merchants/{cmlId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cmlId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cmlId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRecurringRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRecurringRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRecurringRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRecurringRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMerchantLinkResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/merchants/{cmlId}/cancel": {
      "put": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cmlId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelRecurringRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelRecurringRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelRecurringRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelRecurringRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/merchant-requests": {
      "post": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMerchantRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMerchantRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMerchantRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMerchantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMerchantRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMerchantRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMerchantRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/merchant-requests/{merchantRequestId}/files": {
      "put": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "merchantRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "formFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "formFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/customer-users": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerUserResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerUserResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerUserResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/customer-user": {
      "post": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUserUpsertRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUserUpsertRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUserUpsertRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUserUpsertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUserUpsertResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUserUpsertResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUserUpsertResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/customer-user/{userId}": {
      "put": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUserUpsertRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUserUpsertRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUserUpsertRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUserUpsertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUserUpsertResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUserUpsertResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUserUpsertResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUserDeleteResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUserDeleteResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUserDeleteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/diagnostics": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/idverifications/init": {
      "post": {
        "tags": [
          "IdVerifications"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InitRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InitRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InitRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/idverifications/{scanId}": {
      "get": {
        "tags": [
          "IdVerifications"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/idverifications/verify/drivinglicence": {
      "post": {
        "tags": [
          "IdVerifications"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyDrivingLicenceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyDrivingLicenceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyDrivingLicenceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyDrivingLicenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/idverifications/verify/passport": {
      "post": {
        "tags": [
          "IdVerifications"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPassportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPassportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPassportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPassportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/merchants": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MerchantFilterRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MerchantFilterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MerchantFilterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MerchantFilterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Merchants"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/merchants/{merchantId}": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Merchants"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/payments/{transactionId}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/payments/{transactionId}/cancel": {
      "put": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/payments/{merchantId}/pricing": {
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cardType",
            "in": "query",
            "schema": {
              "enum": [
                "Unknown",
                "Visa",
                "MasterCard",
                "American_Express",
                "Bank_Account",
                "EFTPOS",
                "BPay",
                "JCB",
                "DinersClub",
                "FixedTermPrepayment",
                "PayPal",
                "Custom",
                "AusPost",
                "PayId",
                "ApplePay",
                "LatPay",
                "PayTo",
                "GooglePay",
                "ClickToPay",
                "SlicePay",
                "Payright"
              ],
              "type": "string"
            }
          },
          {
            "name": "cardNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "subCardType",
            "in": "query",
            "schema": {
              "enum": [
                "Unknown",
                "Visa",
                "MasterCard",
                "American_Express",
                "Bank_Account",
                "EFTPOS",
                "BPay",
                "JCB",
                "DinersClub",
                "FixedTermPrepayment",
                "PayPal",
                "Custom",
                "AusPost",
                "PayId",
                "ApplePay",
                "LatPay",
                "PayTo",
                "GooglePay",
                "ClickToPay",
                "SlicePay",
                "Payright"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/payments/initiate-googlepay": {
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "merchantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/payments/initiate-applepay": {
      "post": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InitiateApplePaySessionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiateApplePaySessionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiateApplePaySessionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InitiateApplePaySessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/points/link-partners": {
      "get": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageLimit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkPartnerRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkPartnerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkPartnerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkPartnerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/points/link-partners/{linkPartnerId}": {
      "get": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "linkPartnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/points": {
      "get": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageLimit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/points/link-partners/{linkPartnerId}/remove": {
      "put": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "linkPartnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pointspartners": {
      "get": {
        "tags": [
          "PointsPartners"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pointspartners/{id}": {
      "get": {
        "tags": [
          "PointsPartners"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pointspartners/redeem": {
      "post": {
        "tags": [
          "PointsPartners"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PointsRedemptionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PointsRedemptionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PointsRedemptionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PointsRedemptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sites/{siteId}": {
      "get": {
        "tags": [
          "Sites"
        ],
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SitesSimpleGetResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitesSimpleGetResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitesSimpleGetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/tokens/{tokenType}/{reference}": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "name": "merchantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tokenType",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "Token",
                "MerchantUniqueReference"
              ],
              "type": "string"
            }
          },
          {
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokensGetResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensGetResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensGetResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/tokens": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/tokens/{processor}/threeds/setup": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "name": "processor",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "Unknown",
                "PayPal",
                "SecurePay",
                "BPay",
                "BraintreePayPal",
                "WibsWestpac",
                "FatZebra",
                "CyberSource",
                "Zepto",
                "AusPost",
                "Bnz",
                "Checkout",
                "LatPay",
                "Nium",
                "TillPayments",
                "SlicePay",
                "Payright"
              ],
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsSetupRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsSetupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsSetupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsSetupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDsSetupResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDsSetupResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDsSetupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/tokens/{processor}/threeds/enroll": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "name": "processor",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "Unknown",
                "PayPal",
                "SecurePay",
                "BPay",
                "BraintreePayPal",
                "WibsWestpac",
                "FatZebra",
                "CyberSource",
                "Zepto",
                "AusPost",
                "Bnz",
                "Checkout",
                "LatPay",
                "Nium",
                "TillPayments",
                "SlicePay",
                "Payright"
              ],
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsEnrollRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsEnrollRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsEnrollRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsEnrollRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDsEnrollResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDsEnrollResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDsEnrollResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{identifier}/customers/{customerId}/tokens/{processor}/threeds/validate": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "name": "processor",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "Unknown",
                "PayPal",
                "SecurePay",
                "BPay",
                "BraintreePayPal",
                "WibsWestpac",
                "FatZebra",
                "CyberSource",
                "Zepto",
                "AusPost",
                "Bnz",
                "Checkout",
                "LatPay",
                "Nium",
                "TillPayments",
                "SlicePay",
                "Payright"
              ],
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsValidateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsValidateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsValidateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ThreeDsValidateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDsValidationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDsValidationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreeDsValidationResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountingPartnerRequest": {
        "required": [
          "authcode",
          "state"
        ],
        "type": "object",
        "properties": {
          "authcode": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AddBankRequest": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "bsb": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AddBankResponse": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "OK",
              "Error"
            ],
            "type": "string"
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          },
          "customerBank": {
            "$ref": "#/components/schemas/TokenizedBank"
          }
        },
        "additionalProperties": false
      },
      "AddCardRequest": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "authSource": {
            "type": "integer",
            "format": "int32"
          },
          "browserData": {
            "$ref": "#/components/schemas/BrowserData"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "card": {
            "$ref": "#/components/schemas/PlainCard"
          },
          "threeDsPayload": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddCardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "OK",
              "Error"
            ],
            "type": "string"
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          },
          "customerCard": {
            "$ref": "#/components/schemas/TokenizedCard"
          },
          "tokenResponse": {
            "$ref": "#/components/schemas/TokenResponse"
          },
          "threeDsSetupResponse": {
            "$ref": "#/components/schemas/ThreeDsSetupResponse"
          },
          "threeDsStatus": {
            "enum": [
              "NotApplicable",
              "DdcCollect",
              "Redirect"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AddPayToRequest": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "bsb": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AddPayToResponse": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "OK",
              "Error"
            ],
            "type": "string"
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          },
          "customerPayTo": {
            "$ref": "#/components/schemas/TokenizedPayTo"
          }
        },
        "additionalProperties": false
      },
      "Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "escapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/Module"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            },
            "nullable": true,
            "readOnly": true
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "securityRuleSet": {
            "enum": [
              "None",
              "Level1",
              "Level2"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BrowserData": {
        "type": "object",
        "properties": {
          "screenHeight": {
            "type": "string",
            "nullable": true
          },
          "screenWidth": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "colorDepth": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "userAgent": {
            "type": "string",
            "nullable": true
          },
          "acceptHeader": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelPaymentRequest": {
        "type": "object",
        "properties": {
          "transactionStatus": {
            "enum": [
              "Pending",
              "Error",
              "Submitted",
              "Successful",
              "Failed",
              "Cancelled",
              "Suppressed",
              "InProgress",
              "ProcessedExternal",
              "Rejected",
              "PendingThreeDS",
              "ApprovalPending"
            ],
            "type": "string"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "suppressOriginalPayment": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CancelRecurringRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CardDetails": {
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "expiryMonth": {
            "type": "string",
            "nullable": true
          },
          "expiryYear": {
            "type": "string",
            "nullable": true
          },
          "cvv": {
            "type": "string",
            "nullable": true
          },
          "cardHolderName": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordRequest": {
        "required": [
          "password",
          "token",
          "userType"
        ],
        "type": "object",
        "properties": {
          "userType": {
            "enum": [
              "BusinessUser",
              "MerchantUser",
              "CustomerUser",
              "MerchantFtpUser",
              "SecurePayFtpUser",
              "SystemApplication",
              "SharedFtpUser",
              "MerchantApiUser",
              "CustomerApiUser"
            ],
            "type": "string"
          },
          "token": {
            "type": "string",
            "format": "uuid"
          },
          "password": {
            "minLength": 1,
            "pattern": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$",
            "type": "string"
          },
          "unblock": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ConstructorInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "enum": [
              "PrivateScope",
              "Private",
              "FamANDAssem",
              "Assembly",
              "Family",
              "FamORAssem",
              "Public",
              "MemberAccessMask",
              "UnmanagedExport",
              "Static",
              "Final",
              "Virtual",
              "HideBySig",
              "NewSlot",
              "CheckAccessOnOverride",
              "Abstract",
              "SpecialName",
              "RTSpecialName",
              "PinvokeImpl",
              "HasSecurity",
              "RequireSecObject",
              "ReservedMask"
            ],
            "type": "string",
            "readOnly": true
          },
          "methodImplementationFlags": {
            "enum": [
              "IL",
              "Native",
              "OPTIL",
              "CodeTypeMask",
              "ManagedMask",
              "NoInlining",
              "ForwardRef",
              "Synchronized",
              "NoOptimization",
              "PreserveSig",
              "AggressiveInlining",
              "AggressiveOptimization",
              "InternalCall",
              "MaxMethodImplVal"
            ],
            "type": "string",
            "readOnly": true
          },
          "callingConvention": {
            "enum": [
              "Standard",
              "VarArgs",
              "Any",
              "HasThis",
              "ExplicitThis"
            ],
            "type": "string",
            "readOnly": true
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "enum": [
              "Constructor",
              "Event",
              "Field",
              "Method",
              "Property",
              "TypeInfo",
              "Custom",
              "NestedType",
              "All"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateCustomerRequest": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "tradingName": {
            "type": "string",
            "nullable": true
          },
          "industry": {
            "type": "string",
            "nullable": true
          },
          "accountingSoftware": {
            "type": "string",
            "nullable": true
          },
          "abn": {
            "type": "string",
            "nullable": true
          },
          "sendWelcomeEmail": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMerchantRequest": {
        "type": "object",
        "properties": {
          "customerReference": {
            "type": "string",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "paymentOption": {
            "enum": [
              "AutoPay",
              "EmailReminder",
              "SmsReminder",
              "FixedTerm",
              "BatchPay",
              "ScheduledPay",
              "OneOff",
              "PayID",
              "BPAY"
            ],
            "type": "string",
            "nullable": true
          },
          "paymentFrequency": {
            "enum": [
              "Weekly",
              "Fortnightly",
              "Monthly",
              "Quarterly",
              "HalfYearly",
              "Yearly",
              "FourWeeks"
            ],
            "type": "string",
            "nullable": true
          },
          "notificationMethod": {
            "enum": [
              "None",
              "Sms",
              "Email"
            ],
            "type": "string"
          },
          "paymentAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "merchant": {
            "$ref": "#/components/schemas/NewMerchant"
          },
          "processPayment": {
            "type": "boolean"
          },
          "processPaymentOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "suburb": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMerchantRequestResponse": {
        "type": "object",
        "properties": {
          "merchantRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePaymentRequest": {
        "type": "object",
        "properties": {
          "customerMerchantLinkId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "baseAmount": {
            "type": "number",
            "format": "double"
          },
          "customerReference": {
            "type": "string",
            "nullable": true
          },
          "processingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "billerReference": {
            "type": "string",
            "nullable": true
          },
          "browserData": {
            "$ref": "#/components/schemas/BrowserData"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            },
            "nullable": true,
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeNamedArgument"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/Type"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerAccountItem": {
        "type": "object",
        "properties": {
          "customerAccountId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "label": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "accountName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "bsb": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "cardType": {
            "enum": [
              "Unknown",
              "Visa",
              "MasterCard",
              "American_Express",
              "Bank_Account",
              "EFTPOS",
              "BPay",
              "JCB",
              "DinersClub",
              "FixedTermPrepayment",
              "PayPal",
              "Custom",
              "AusPost",
              "PayId",
              "ApplePay",
              "LatPay",
              "PayTo",
              "GooglePay",
              "ClickToPay",
              "SlicePay",
              "Payright"
            ],
            "type": "string",
            "readOnly": true
          },
          "cardExpiry": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "displayValue": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDefault": {
            "type": "boolean",
            "readOnly": true
          },
          "processorName": {
            "enum": [
              "Unknown",
              "PayPal",
              "SecurePay",
              "BPay",
              "BraintreePayPal",
              "WibsWestpac",
              "FatZebra",
              "CyberSource",
              "Zepto",
              "AusPost",
              "Bnz",
              "Checkout",
              "LatPay",
              "Nium",
              "TillPayments",
              "SlicePay",
              "Payright"
            ],
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "verificationStatus": {
            "enum": [
              "NotApplicable",
              "Initiate",
              "Pending",
              "Verified"
            ],
            "type": "string",
            "nullable": true
          },
          "verificationCodeExpiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "verfificationAttemptCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "verificationTransactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasVerificationExpired": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "isAuthorized": {
            "type": "boolean",
            "nullable": true
          },
          "payToStatus": {
            "enum": [
              "NotApplicable",
              "Unknown",
              "AgreementPending",
              "AgreementCreated",
              "AgreementActive",
              "AgreementSuspended",
              "AgreementCancelled",
              "AgreementDeclined",
              "AgreementFailed",
              "AgreementExpired"
            ],
            "type": "string",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerAccountItemQueryResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerAccountItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerIdVerificationRequest": {
        "type": "object",
        "properties": {
          "documentVerificationStatus": {
            "enum": [
              "NotApplicable",
              "DocumentVerified",
              "DocumentNotVerified",
              "DocumentInvalid"
            ],
            "type": "string"
          },
          "verificationReference": {
            "type": "string",
            "nullable": true
          },
          "verificationDocumentType": {
            "enum": [
              "Unknown",
              "DrivingLicence",
              "Passport",
              "MedicareCard"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomerIdVerificationResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CustomerMerchantLinkFilterRequest": {
        "type": "object",
        "properties": {
          "customerMerchantLinkId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "customerMerchantStatus": {
            "enum": [
              "Open",
              "AwaitingEmailVerfication",
              "AwaitingSignature",
              "SetUpIncomplete",
              "Restricted",
              "Closed",
              "OnHold",
              "PendingBankAccountVerification"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerMerchantLinkItem": {
        "type": "object",
        "properties": {
          "customerMerchantLinkId": {
            "type": "integer",
            "format": "int32"
          },
          "customerReference": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "merchantCode": {
            "type": "string",
            "nullable": true
          },
          "merchantName": {
            "type": "string",
            "nullable": true
          },
          "billerCode": {
            "type": "string",
            "nullable": true
          },
          "merchantLogo": {
            "type": "string",
            "nullable": true
          },
          "billerReference": {
            "type": "string",
            "nullable": true
          },
          "paymentOption": {
            "type": "string",
            "nullable": true
          },
          "paymentAmount": {
            "type": "number",
            "format": "double"
          },
          "paymentFrequency": {
            "enum": [
              "Unknown",
              "Communication_SMS",
              "Communication_Email",
              "Permission_Payment_Enddate_Action_Remind_And_Continue",
              "Option_Invoice_MerchantFees_Monthly",
              "Settle_Payment_By",
              "Settle_In_Next_Reconciliation_Cycle",
              "Permission_Merchant_CloseCustomerAccount",
              "Permission_Merchant_AddEditReOpenCustomer",
              "Permission_Merchant_BulkCommunications",
              "Permission_Merchant_MerchantOpenClosedCustomerInstantNotification",
              "Permission_Merchant_ReceiveCustomerEditDetailsEmail",
              "Permission_Merchant_ReceiveWaitingSignatureEmail",
              "Permission_Merchant_IsVisibleForPublicOneOffPayment",
              "Permission_Merchant_IsVisibleForCustomerRegistration",
              "Permission_Merchant_ReceivePublicOneOffPaymentEmail",
              "Permission_Merchant_FutureDatedPaymentChange",
              "Permission_Customer_FillSignOnlineForm",
              "Permission_Customer_CloseAccount",
              "Permission_Customer_FutureDatedPayments",
              "Permission_Customer_EditMerchantDetails",
              "Permission_Customer_SendPaymentPeriodEndingReminder",
              "Permission_PaymentOption_AutoPay",
              "Permission_PaymentOption_EmailReminders",
              "Permission_PaymentOption_SMSReminders",
              "Permission_PaymentOption_FixedTerm",
              "Permission_PaymentOption_BatchPay",
              "Permission_PaymentOption_ScheduledPay",
              "Permission_PaymentOption_OneOff",
              "Permission_PaymentMethod_BankAccount",
              "Permission_PaymentMethod_CreditCard",
              "Permission_Merchant_BPay",
              "Permission_PaymentFrequency_Weekly",
              "Permission_PaymentFrequency_Fortnightly",
              "Permission_PaymentFrequency_Monthly",
              "Permission_PaymentFrequency_Quarterly",
              "Permission_PaymentFrequency_HalfYearly",
              "Permission_PaymentFrequency_Yearly",
              "Permission_PaymentFeature_Merchant_SchedulePay",
              "Permission_PaymentFeature_Customer_SchedulePay",
              "Permission_PaymentFeature_Merchant_OneOff",
              "Permission_PaymentFeature_Customer_OneOff",
              "Permission_PaymentFeature_Public_OneOff",
              "Permission_Report_ReceivePendingPaymentsReport",
              "Report_ReceiveFrequency_RegisteredCustomerReport",
              "Report_ReceiveFrequency_MerchantPaymentReport",
              "Report_ReceiveFrequency_MerchantRecentPaymentReport",
              "Report_ReceiveFrequency_MerchantAccountOpenClosureReport",
              "Permission_AutoPay_Confirmation",
              "Permission_PaymentFailure_Notification",
              "Permission_Charge_NewCustomer_SetupFee",
              "Permission_Promotion_EveryTransaction",
              "Permission_Promotion_PayOnTime",
              "Permission_Promotion_Introduction",
              "Permission_Promotion_Registration",
              "Permission_Promotion_Cumulative",
              "Permission_Promotion_CreditCard",
              "Permission_AutoRetry_Autopay",
              "Permission_AutoRetry_BatchPay",
              "Permission_AutoRetry_FixedTerm",
              "Permission_AutoRetry_SmsReminder",
              "Permission_AutoRetry_EmailReminder",
              "Permission_Charge_MerchantSubscription_SetupFee",
              "Permission_Merchant_Invoice_By_Mail",
              "Permission_Merchant_Invoice_Visible_Online",
              "Permission_Support_Additional_Customer_References",
              "Permission_Charge_Customer_MembershipFee_For_Every_Merchant",
              "Permission_Customers_Can_Register_For_Fixed_Term_Payment_Method",
              "Permission_Merchant_Can_Add_Their_Customers_For_Fixed_Term_Method",
              "Permission_Are_Customers_Allowed_To_Register_Themselves",
              "Permission_Customer_EditOwnDetails",
              "Permission_AutoRetry_Customer_Setup_Fee",
              "Permission_AutoRetry_Customer_Membership_Fee",
              "Permission_AutoRetry_Failed_Payment_Fee",
              "Permission_PaymentOption_SMSAndEmailReminders",
              "Permission_Merchant_Invoice_Payment_Method",
              "Communication_None",
              "Permission_Send_Reconciliation_Files_In_Email",
              "Permission_Merchant_Reconciliation_Pay_And_Csv_Amount_Choice",
              "Permission_Merchant_Reconciliation_Pay_Merchant_Bank_Or_Merchant_Code",
              "Permission_Merchant_ReceiveCustomerOpenCloseEmail_Weekly",
              "Permission_Merchant_ReceiveCustomerOpenCloseEmail_Monthly",
              "Permission_Merchant_ReceiveCustomerOpenCloseEmail_Daily",
              "Option_Charge_MerchantFees",
              "Permission_Customer_SendNotificationAfterBulkPaymentReProcessing",
              "Permission_Merchant_SendNotificationAfterBulkPaymentReProcessing",
              "Permission_Payment_SendNotificationForAutoPay",
              "Option_Customer_Registers_Without_Merchant",
              "Option_Customer_Registers_With_Merchant",
              "Permission_PaymentMethod_BPAY",
              "Permission_AutoRetry_BPAY_Transaction_Fee",
              "Permission_WebApi_Post_Payment_Response",
              "Permission_PaymentMethod_PAYPAL",
              "Permission_NonBatchPay_Customer_Available_ForBatchPay",
              "Permission_Are_Customer_Allowed_To_MakePayment_While_Referring_Merchant",
              "Permission_Merchant_Send_Amount_Transaction_By_Transaction",
              "Permission_Merchant_ReceiveReconciliationEmailIfSettleByBpayOrIndividualReconciliation",
              "Permission_Merchant_ReceiveCustomerOneOffPaymentEmail",
              "Permission_Merchant_SendRemittanceAdviceToBillers",
              "Permission_Customer_Send_Business_Customer_Closed",
              "Permission_Customer_Allowed_OnHold",
              "Permission_PaymentFrequency_FourWeeks",
              "Option_Enable_KYC_Verification",
              "Permission_Merchant_AutoUpdateCustomerReference",
              "Permission_Merchant_AwardMerchantPoints",
              "Permission_PaymentOption_RequestPay",
              "Permission_Customer_RegoFromPublicWebPay",
              "Permission_Enable_BankAccount_InPaymentPlugin",
              "Permission_Merchant_BatchAbaFile_Use_TitleOfAccount_Field",
              "Permission_NonRequestPay_Customer_Available_ForRequestPay",
              "Permission_Enable_Payment_Plugin_Footer",
              "Option_Customer_Registers_With_Merchant_SingleForm",
              "Permission_PaymentSettings_Send_Recurring_Flag_PaymentProcessor",
              "Enable_KYC_Verification_Process",
              "Permission_Merchant_Allow_Customer_Refund",
              "Permission_Allow_Generate_Merchant_Credit_Report_File",
              "Permission_Merchant_Enable_Merchant_CustomForm",
              "Permission_Merchant_Allow_BankAccount_Payments_Via_RTP",
              "Permission_Merchant_Enable_Xero_Integration_Receivable",
              "Permission_Merchant_Enable_Xero_Integration_Payable",
              "Permission_Merchant_Enable_Myob_Integration_Receivable",
              "Permission_Merchant_Enable_Myob_Integration_Payable",
              "Permission_Merchant_Enable_Request_To_Pay",
              "Permission_Merchant_Enable_QuickBooks_Integration_Receivable",
              "Permission_Merchant_Enable_QuickBooks_Integration_Payable",
              "Permission_Settlement_RecallChargebackFundDebitBy",
              "Permission_Enable_EftSure_Verification",
              "Permission_Enable_BankAccount_OneOffPayment_In_Plugin",
              "Permission_Allow_Processing_Fee_Override_In_Plugin",
              "Permission_Customer_Enable_2FA_Authentication",
              "Permission_Merchant_Enable_2FA_Authentication",
              "Permission_Customer_Enable_Communication_To_Customer",
              "Permission_Allow_Merchant_Facing_Jquery_Modes",
              "Permission_Merchant_Enable_RecaptchaOnPublicOneOff",
              "Permission_Merchant_Are_Users_Allowed_To_Select_Merchant_For_Public_OneOff_Payment",
              "Permission_Customer_CustomerReference_Stored",
              "Permission_Customer_Support_Multiple_User_Logins",
              "Permission_Customer_Enable_BankAccount_Verification",
              "Permission_Merchant_OnlyBatchPayAllowedForPropertyMeCustomer",
              "Permission_Merchant_AllowCardProxyApi",
              "Permission_PaymentMethod_ApplePay",
              "Permission_Refund_BankPayments_From_Channel",
              "Permission_PaymentMethod_AusPost",
              "Permission_AutoRetry_AusPost_Transaction_Fee",
              "Permission_PaymentMethod_PayId",
              "Permission_AutoRetry_PayId_Transaction_Fee",
              "Permission_Merchant_PayId_Generation",
              "Permission_PaymentOption_PayId",
              "Permission_PaymentOption_BPay",
              "Permission_Merchant_Enable_RecaptchaOnCustomerRegistration",
              "Permission_Merchant_Enable_RecaptchaOnSingleSetupForm",
              "Permission_Enable_PayId_OneOffPayment_In_Plugin",
              "Permission_Enable_PayId_Tokenise_In_Plugin",
              "Permission_Enable_ApplePay_OneOffPayment_In_Plugin",
              "Permission_PaymentOption_BuyNowPayLater",
              "Permission_Merchant_Allow_LatPay_In_PublicWebPay",
              "Permission_PaymentMethod_LatPay",
              "Permission_Merchant_Send_Travel_Data",
              "Permission_Merchant_PayId_Plugin_Payment",
              "Permission_Merchant_PayId_Plugin_Tokenisation",
              "Permission_Customer_Enable_BankAccount_Verification_Transaction_Customer",
              "Permission_Customer_Enable_BankAccount_Verification_Transaction_Merchant",
              "Permission_Customer_Enable_BankAccount_Verification_Transaction_BusinessUser",
              "Permission_PaymentMethod_PayTo",
              "Permission_AutoRetry_PayTo",
              "Permission_Communication_PayTo_Mandate_Cancel_Edit_Notifications",
              "Permission_Merchant_PayTo_Funds_Settle_By",
              "Permission_PaymentMethod_GooglePay",
              "Permission_Customer_MasterCard_Enable_Id_Verification",
              "Permission_PaymentOption_OneOff_International",
              "Permission_Merchant_Enable_InternationalPayments",
              "Permission_Customer_Enable_RecaptchaOnCustomerOneOff",
              "Permission_Customer_Enable_RecaptchaOnQuickCustomerRegistration",
              "Permission_Customer_Enable_RecaptchaOnCustomerWallet",
              "Permission_Merchant_Enable_RecaptchaOnPaymentPlugin",
              "Permission_Customer_Enable_Pay_Again_Customer_OneOff",
              "Permission_Merchant_Enable_RecaptchaOnCustomerMerchantAdd",
              "Permission_Enable_GooglePay_OneOffPayment_In_Plugin",
              "Permission_Enable_Latitude_OneOffPayment_In_Plugin"
            ],
            "type": "string"
          },
          "paymentStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentAccountDisplay": {
            "type": "string",
            "nullable": true
          },
          "cmlStatus": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "isBpay": {
            "type": "boolean"
          },
          "paymentFrequencyDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomerMerchantLinkItemQueryResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerMerchantLinkItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerMerchantLinkResponse": {
        "type": "object",
        "properties": {
          "customerMerchantLinkId": {
            "type": "integer",
            "format": "int32"
          },
          "customerReference": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "merchantCode": {
            "type": "string",
            "nullable": true
          },
          "merchantName": {
            "type": "string",
            "nullable": true
          },
          "paymentOption": {
            "type": "string",
            "nullable": true
          },
          "paymentAmount": {
            "type": "number",
            "format": "double"
          },
          "paymentFrequency": {
            "type": "string",
            "nullable": true
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentAccountDisplay": {
            "type": "string",
            "nullable": true
          },
          "cmlStatus": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerMerchantLinkResponseQueryResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerMerchantLinkResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customerCode": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "tradingName": {
            "type": "string",
            "nullable": true
          },
          "industry": {
            "type": "string",
            "nullable": true
          },
          "accountingSoftware": {
            "type": "string",
            "nullable": true
          },
          "abn": {
            "type": "string",
            "nullable": true
          },
          "customerStatus": {
            "enum": [
              "Open",
              "OpenNoMerchantAssigned",
              "Blocked",
              "IdVerificationPending"
            ],
            "type": "string"
          },
          "rewardPoints": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerResponseQueryResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerUserDeleteResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerUserResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userRole": {
            "enum": [
              "CustomerOwner",
              "SuperUser",
              "CustomerUser",
              "MerchantAdmin",
              "MerchantUser",
              "MerchantContact"
            ],
            "type": "string"
          },
          "isMfaActive": {
            "type": "boolean"
          },
          "userStatus": {
            "enum": [
              "Active",
              "Blocked"
            ],
            "type": "string"
          },
          "statusReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerUserUpsertRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "enum": [
              "CustomerOwner",
              "SuperUser",
              "CustomerUser",
              "MerchantAdmin",
              "MerchantUser",
              "MerchantContact"
            ],
            "type": "string"
          },
          "sendPasswordEmail": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerUserUpsertResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EventInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "enum": [
              "Constructor",
              "Event",
              "Field",
              "Method",
              "Property",
              "TypeInfo",
              "Custom",
              "NestedType",
              "All"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "enum": [
              "None",
              "SpecialName",
              "RTSpecialName"
            ],
            "type": "string",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/Type"
          }
        },
        "additionalProperties": false
      },
      "Exception": {
        "type": "object",
        "properties": {
          "targetSite": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "innerException": {
            "$ref": "#/components/schemas/Exception"
          },
          "helpLink": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "hResult": {
            "type": "integer",
            "format": "int32"
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "enum": [
              "Constructor",
              "Event",
              "Field",
              "Method",
              "Property",
              "TypeInfo",
              "Custom",
              "NestedType",
              "All"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "enum": [
              "PrivateScope",
              "Private",
              "FamANDAssem",
              "Assembly",
              "Family",
              "FamORAssem",
              "Public",
              "FieldAccessMask",
              "Static",
              "InitOnly",
              "Literal",
              "NotSerialized",
              "HasFieldRVA",
              "SpecialName",
              "RTSpecialName",
              "HasFieldMarshal",
              "PinvokeImpl",
              "HasDefault",
              "ReservedMask"
            ],
            "type": "string",
            "readOnly": true
          },
          "fieldType": {
            "$ref": "#/components/schemas/Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/RuntimeFieldHandle"
          }
        },
        "additionalProperties": false
      },
      "ICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "InitRequest": {
        "type": "object",
        "properties": {
          "successUrl": {
            "type": "string",
            "nullable": true
          },
          "failureUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InitiateApplePaySessionRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "initiativeContext": {
            "type": "string",
            "nullable": true
          },
          "validationUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "LinkPartnerRequest": {
        "type": "object",
        "properties": {
          "pointsPartnerId": {
            "type": "integer",
            "format": "int32"
          },
          "membershipNumber": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "required": [
          "password",
          "username",
          "userType"
        ],
        "type": "object",
        "properties": {
          "userType": {
            "enum": [
              "BusinessUser",
              "MerchantUser",
              "CustomerUser",
              "MerchantFtpUser",
              "SecurePayFtpUser",
              "SystemApplication",
              "SharedFtpUser",
              "MerchantApiUser",
              "CustomerApiUser"
            ],
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "isAuthenticated": {
            "type": "boolean"
          },
          "isBlocked": {
            "type": "boolean",
            "nullable": true
          },
          "totalAttemptsAllowed": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "failedAttempts": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "mfaOption": {
            "enum": [
              "Off",
              "Optional",
              "Mandatory"
            ],
            "type": "string",
            "nullable": true
          },
          "mfaAuthenticationEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "mfaProvider": {
            "enum": [
              "None",
              "Email",
              "GoogleAuthenticator",
              "MicrosoftAuthenticator"
            ],
            "type": "string",
            "nullable": true
          },
          "mfaSecretKey": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "enum": [
              "CustomerOwner",
              "SuperUser",
              "CustomerUser",
              "MerchantAdmin",
              "MerchantUser",
              "MerchantContact"
            ],
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "enum": [
              "Constructor",
              "Event",
              "Field",
              "Method",
              "Property",
              "TypeInfo",
              "Custom",
              "NestedType",
              "All"
            ],
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MerchantFilterRequest": {
        "type": "object",
        "properties": {
          "billerCode": {
            "type": "string",
            "nullable": true
          },
          "bsb": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "searchString": {
            "type": "string",
            "nullable": true
          },
          "merchantStatus": {
            "enum": [
              "Closed",
              "Open",
              "Restricted",
              "Pending",
              "Rejected",
              "Draft",
              "PendingKyc",
              "PendingAccountVerification",
              "PendingMatch"
            ],
            "type": "string",
            "nullable": true
          },
          "bPaySettledMerchants": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MethodBase": {
        "type": "object",
        "properties": {
          "memberType": {
            "enum": [
              "Constructor",
              "Event",
              "Field",
              "Method",
              "Property",
              "TypeInfo",
              "Custom",
              "NestedType",
              "All"
            ],
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "enum": [
              "PrivateScope",
              "Private",
              "FamANDAssem",
              "Assembly",
              "Family",
              "FamORAssem",
              "Public",
              "MemberAccessMask",
              "UnmanagedExport",
              "Static",
              "Final",
              "Virtual",
              "HideBySig",
              "NewSlot",
              "CheckAccessOnOverride",
              "Abstract",
              "SpecialName",
              "RTSpecialName",
              "PinvokeImpl",
              "HasSecurity",
              "RequireSecObject",
              "ReservedMask"
            ],
            "type": "string",
            "readOnly": true
          },
          "methodImplementationFlags": {
            "enum": [
              "IL",
              "Native",
              "OPTIL",
              "CodeTypeMask",
              "ManagedMask",
              "NoInlining",
              "ForwardRef",
              "Synchronized",
              "NoOptimization",
              "PreserveSig",
              "AggressiveInlining",
              "AggressiveOptimization",
              "InternalCall",
              "MaxMethodImplVal"
            ],
            "type": "string",
            "readOnly": true
          },
          "callingConvention": {
            "enum": [
              "Standard",
              "VarArgs",
              "Any",
              "HasThis",
              "ExplicitThis"
            ],
            "type": "string",
            "readOnly": true
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MethodInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "enum": [
              "PrivateScope",
              "Private",
              "FamANDAssem",
              "Assembly",
              "Family",
              "FamORAssem",
              "Public",
              "MemberAccessMask",
              "UnmanagedExport",
              "Static",
              "Final",
              "Virtual",
              "HideBySig",
              "NewSlot",
              "CheckAccessOnOverride",
              "Abstract",
              "SpecialName",
              "RTSpecialName",
              "PinvokeImpl",
              "HasSecurity",
              "RequireSecObject",
              "ReservedMask"
            ],
            "type": "string",
            "readOnly": true
          },
          "methodImplementationFlags": {
            "enum": [
              "IL",
              "Native",
              "OPTIL",
              "CodeTypeMask",
              "ManagedMask",
              "NoInlining",
              "ForwardRef",
              "Synchronized",
              "NoOptimization",
              "PreserveSig",
              "AggressiveInlining",
              "AggressiveOptimization",
              "InternalCall",
              "MaxMethodImplVal"
            ],
            "type": "string",
            "readOnly": true
          },
          "callingConvention": {
            "enum": [
              "Standard",
              "VarArgs",
              "Any",
              "HasThis",
              "ExplicitThis"
            ],
            "type": "string",
            "readOnly": true
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "enum": [
              "Constructor",
              "Event",
              "Field",
              "Method",
              "Property",
              "TypeInfo",
              "Custom",
              "NestedType",
              "All"
            ],
            "type": "string",
            "readOnly": true
          },
          "returnParameter": {
            "$ref": "#/components/schemas/ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/ICustomAttributeProvider"
          }
        },
        "additionalProperties": false
      },
      "Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "scopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NewMerchant": {
        "type": "object",
        "properties": {
          "tradingName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "abn": {
            "type": "string",
            "nullable": true
          },
          "acn": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "settlementOption": {
            "enum": [
              "BillerCode",
              "BankAccountNumber"
            ],
            "type": "string"
          },
          "billerCode": {
            "type": "string",
            "nullable": true
          },
          "billerName": {
            "type": "string",
            "nullable": true
          },
          "bsb": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "enum": [
              "None",
              "In",
              "Out",
              "Lcid",
              "Retval",
              "Optional",
              "HasDefault",
              "HasFieldMarshal",
              "Reserved3",
              "Reserved4",
              "ReservedMask"
            ],
            "type": "string",
            "readOnly": true
          },
          "member": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/Type"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "rawDefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "CustomerAccount",
              "Card",
              "Bank",
              "PayTo",
              "GooglePay",
              "ApplePay"
            ],
            "type": "string"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "integer",
            "format": "int32"
          },
          "processingDate": {
            "type": "string",
            "format": "date-time"
          },
          "processedAmount": {
            "type": "number",
            "format": "double"
          },
          "isThreeDsEnabled": {
            "type": "boolean"
          },
          "transactionStatus": {
            "enum": [
              "Pending",
              "Error",
              "Submitted",
              "Successful",
              "Failed",
              "Cancelled",
              "Suppressed",
              "InProgress",
              "ProcessedExternal",
              "Rejected",
              "PendingThreeDS",
              "ApprovalPending"
            ],
            "type": "string"
          },
          "transactionStatusString": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardHolderName": {
            "type": "string",
            "nullable": true
          },
          "expiry": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "contactId": {
            "type": "string",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "bsb": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "cardType": {
            "enum": [
              "Unknown",
              "Visa",
              "MasterCard",
              "American_Express",
              "Bank_Account",
              "EFTPOS",
              "BPay",
              "JCB",
              "DinersClub",
              "FixedTermPrepayment",
              "PayPal",
              "Custom",
              "AusPost",
              "PayId",
              "ApplePay",
              "LatPay",
              "PayTo",
              "GooglePay",
              "ClickToPay",
              "SlicePay",
              "Payright"
            ],
            "type": "string"
          },
          "processorName": {
            "enum": [
              "Unknown",
              "PayPal",
              "SecurePay",
              "BPay",
              "BraintreePayPal",
              "WibsWestpac",
              "FatZebra",
              "CyberSource",
              "Zepto",
              "AusPost",
              "Bnz",
              "Checkout",
              "LatPay",
              "Nium",
              "TillPayments",
              "SlicePay",
              "Payright"
            ],
            "type": "string"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "baseAmount": {
            "type": "number",
            "format": "double"
          },
          "merchantFee": {
            "type": "number",
            "format": "double"
          },
          "customerFee": {
            "type": "number",
            "format": "double"
          },
          "merchantCode": {
            "type": "string",
            "nullable": true
          },
          "merchantName": {
            "type": "string",
            "nullable": true
          },
          "customerReference": {
            "type": "string",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "failureReason": {
            "type": "string",
            "nullable": true
          },
          "failureCode": {
            "type": "string",
            "nullable": true
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "customerBillerReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlainCard": {
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "expiryMonth": {
            "type": "string",
            "nullable": true
          },
          "expiryYear": {
            "type": "string",
            "nullable": true
          },
          "cvv": {
            "type": "string",
            "nullable": true
          },
          "cardHolderName": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PointsRedemptionRequest": {
        "type": "object",
        "properties": {
          "pointsPartnerId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "redemptionAmount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PropertyInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "enum": [
              "Constructor",
              "Event",
              "Field",
              "Method",
              "Property",
              "TypeInfo",
              "Custom",
              "NestedType",
              "All"
            ],
            "type": "string",
            "readOnly": true
          },
          "propertyType": {
            "$ref": "#/components/schemas/Type"
          },
          "attributes": {
            "enum": [
              "None",
              "SpecialName",
              "RTSpecialName",
              "HasDefault",
              "Reserved2",
              "Reserved3",
              "Reserved4",
              "ReservedMask"
            ],
            "type": "string",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordRequest": {
        "required": [
          "username",
          "userType"
        ],
        "type": "object",
        "properties": {
          "userType": {
            "enum": [
              "BusinessUser",
              "MerchantUser",
              "CustomerUser",
              "MerchantFtpUser",
              "SecurePayFtpUser",
              "SystemApplication",
              "SharedFtpUser",
              "MerchantApiUser",
              "CustomerApiUser"
            ],
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "unblock": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "SaveAccountsRequest": {
        "required": [
          "expenseAccountCode",
          "paymentAccountCode"
        ],
        "type": "object",
        "properties": {
          "paymentAccountCode": {
            "minLength": 1,
            "type": "string"
          },
          "expenseAccountCode": {
            "minLength": 1,
            "type": "string"
          },
          "paymentServiceUrl": {
            "type": "string",
            "nullable": true
          },
          "paymentServiceName": {
            "type": "string",
            "nullable": true
          },
          "payNowText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetupRecurringRequest": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentAmount": {
            "type": "number",
            "format": "double"
          },
          "paymentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentOption": {
            "enum": [
              "AutoPay",
              "EmailReminder",
              "SmsReminder",
              "FixedTerm",
              "BatchPay",
              "ScheduledPay",
              "OneOff",
              "PayID",
              "BPAY"
            ],
            "type": "string",
            "nullable": true
          },
          "paymentFrequency": {
            "enum": [
              "Weekly",
              "Fortnightly",
              "Monthly",
              "Quarterly",
              "HalfYearly",
              "Yearly",
              "FourWeeks"
            ],
            "type": "string"
          },
          "noOfPayments": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billerReference": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SitesSimpleGetResponse": {
        "type": "object",
        "properties": {
          "siteId": {
            "type": "integer",
            "format": "int32"
          },
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "siteUrl": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "typeId": {
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "enum": [
              "Sequential",
              "Explicit",
              "Auto"
            ],
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDsChallenge": {
        "type": "object",
        "properties": {
          "challengeUrl": {
            "type": "string",
            "nullable": true
          },
          "jwt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDsEnrollRequest": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "ddcReferenceId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "cardType": {
            "enum": [
              "Unknown",
              "Visa",
              "MasterCard",
              "American_Express",
              "Bank_Account",
              "EFTPOS",
              "BPay",
              "JCB",
              "DinersClub",
              "FixedTermPrepayment",
              "PayPal",
              "Custom",
              "AusPost",
              "PayId",
              "ApplePay",
              "LatPay",
              "PayTo",
              "GooglePay",
              "ClickToPay",
              "SlicePay",
              "Payright"
            ],
            "type": "string"
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "transactionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDsEnrollResponse": {
        "type": "object",
        "properties": {
          "ddcReferenceId": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "challenge": {
            "$ref": "#/components/schemas/ThreeDsChallenge"
          },
          "validationResponse": {
            "$ref": "#/components/schemas/ThreeDsValidationResponse"
          },
          "authenticationTransactionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDsSetupRequest": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDsSetupResponse": {
        "type": "object",
        "properties": {
          "ddcToken": {
            "type": "string",
            "nullable": true
          },
          "ddcUrl": {
            "type": "string",
            "nullable": true
          },
          "ddcReferenceId": {
            "type": "string",
            "nullable": true
          },
          "isLive": {
            "type": "boolean"
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDsValidateRequest": {
        "type": "object",
        "properties": {
          "authenticationTransactionId": {
            "type": "string",
            "nullable": true
          },
          "ddcReferenceId": {
            "type": "string",
            "nullable": true
          },
          "transactionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreeDsValidationResponse": {
        "type": "object",
        "properties": {
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "payload": {
            "type": "string",
            "nullable": true
          },
          "actionName": {
            "enum": [
              "AddCard",
              "Payment",
              "UpdateCard"
            ],
            "type": "string",
            "nullable": true
          },
          "tokenizedCard": {
            "$ref": "#/components/schemas/TokenizedCard"
          },
          "paymentResponse": {
            "$ref": "#/components/schemas/PaymentResponse"
          }
        },
        "additionalProperties": false
      },
      "TokenRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uniqueIdentifier": {
            "type": "string",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardHolderName": {
            "type": "string",
            "nullable": true
          },
          "expiryMonth": {
            "type": "string",
            "nullable": true
          },
          "expiryYear": {
            "type": "string",
            "nullable": true
          },
          "cvv": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "browserData": {
            "$ref": "#/components/schemas/BrowserData"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "programId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardHolderName": {
            "type": "string",
            "nullable": true
          },
          "expiry": {
            "type": "string",
            "nullable": true
          },
          "cardType": {
            "enum": [
              "Unknown",
              "Visa",
              "MasterCard",
              "American_Express",
              "Bank_Account",
              "EFTPOS",
              "BPay",
              "JCB",
              "DinersClub",
              "FixedTermPrepayment",
              "PayPal",
              "Custom",
              "AusPost",
              "PayId",
              "ApplePay",
              "LatPay",
              "PayTo",
              "GooglePay",
              "ClickToPay",
              "SlicePay",
              "Payright"
            ],
            "type": "string"
          },
          "cardTypeDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "failureCode": {
            "type": "string",
            "nullable": true
          },
          "failureReason": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "processor": {
            "enum": [
              "Unknown",
              "PayPal",
              "SecurePay",
              "BPay",
              "BraintreePayPal",
              "WibsWestpac",
              "FatZebra",
              "CyberSource",
              "Zepto",
              "AusPost",
              "Bnz",
              "Checkout",
              "LatPay",
              "Nium",
              "TillPayments",
              "SlicePay",
              "Payright"
            ],
            "type": "string"
          },
          "processorDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isThreeDsEnabled": {
            "type": "boolean"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenizedBank": {
        "type": "object",
        "properties": {
          "customerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "bsb": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "verificationStatus": {
            "enum": [
              "NotApplicable",
              "Initiate",
              "Pending",
              "Verified"
            ],
            "type": "string",
            "nullable": true
          },
          "verificationCodeExpiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "verfificationAttemptCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "verificationTransactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasVerificationExpired": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "isAuthorized": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenizedCard": {
        "type": "object",
        "properties": {
          "customerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardHolderName": {
            "type": "string",
            "nullable": true
          },
          "expiry": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "cardType": {
            "enum": [
              "Unknown",
              "Visa",
              "MasterCard",
              "American_Express",
              "Bank_Account",
              "EFTPOS",
              "BPay",
              "JCB",
              "DinersClub",
              "FixedTermPrepayment",
              "PayPal",
              "Custom",
              "AusPost",
              "PayId",
              "ApplePay",
              "LatPay",
              "PayTo",
              "GooglePay",
              "ClickToPay",
              "SlicePay",
              "Payright"
            ],
            "type": "string"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "processor": {
            "enum": [
              "Unknown",
              "PayPal",
              "SecurePay",
              "BPay",
              "BraintreePayPal",
              "WibsWestpac",
              "FatZebra",
              "CyberSource",
              "Zepto",
              "AusPost",
              "Bnz",
              "Checkout",
              "LatPay",
              "Nium",
              "TillPayments",
              "SlicePay",
              "Payright"
            ],
            "type": "string"
          },
          "tokenReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenizedPayTo": {
        "type": "object",
        "properties": {
          "customerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "bsb": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "agreementUId": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "payToStatus": {
            "enum": [
              "NotApplicable",
              "Unknown",
              "AgreementPending",
              "AgreementCreated",
              "AgreementActive",
              "AgreementSuspended",
              "AgreementCancelled",
              "AgreementDeclined",
              "AgreementFailed",
              "AgreementExpired"
            ],
            "type": "string"
          },
          "statusDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokensGetResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardType": {
            "type": "string",
            "nullable": true
          },
          "expiry": {
            "type": "string",
            "nullable": true
          },
          "failureCode": {
            "type": "string",
            "nullable": true
          },
          "failureReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Type": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "enum": [
              "Constructor",
              "Event",
              "Field",
              "Method",
              "Property",
              "TypeInfo",
              "Custom",
              "NestedType",
              "All"
            ],
            "type": "string",
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "isFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "enum": [
              "None",
              "Covariant",
              "Contravariant",
              "VarianceMask",
              "ReferenceTypeConstraint",
              "NotNullableValueTypeConstraint",
              "DefaultConstructorConstraint",
              "SpecialConstraintMask",
              "AllowByRefLike"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "enum": [
              "NotPublic",
              "Public",
              "NestedPublic",
              "NestedPrivate",
              "NestedFamily",
              "NestedAssembly",
              "NestedFamANDAssem",
              "VisibilityMask",
              "SequentialLayout",
              "ExplicitLayout",
              "LayoutMask",
              "Interface",
              "Abstract",
              "Sealed",
              "SpecialName",
              "RTSpecialName",
              "Import",
              "Serializable",
              "WindowsRuntime",
              "UnicodeClass",
              "AutoClass",
              "StringFormatMask",
              "HasSecurity",
              "ReservedMask",
              "BeforeFieldInit",
              "CustomFormatMask"
            ],
            "type": "string",
            "readOnly": true
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TypeInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "enum": [
              "Constructor",
              "Event",
              "Field",
              "Method",
              "Property",
              "TypeInfo",
              "Custom",
              "NestedType",
              "All"
            ],
            "type": "string",
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "isFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "enum": [
              "None",
              "Covariant",
              "Contravariant",
              "VarianceMask",
              "ReferenceTypeConstraint",
              "NotNullableValueTypeConstraint",
              "DefaultConstructorConstraint",
              "SpecialConstraintMask",
              "AllowByRefLike"
            ],
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "enum": [
              "NotPublic",
              "Public",
              "NestedPublic",
              "NestedPrivate",
              "NestedFamily",
              "NestedAssembly",
              "NestedFamANDAssem",
              "VisibilityMask",
              "SequentialLayout",
              "ExplicitLayout",
              "LayoutMask",
              "Interface",
              "Abstract",
              "Sealed",
              "SpecialName",
              "RTSpecialName",
              "Import",
              "Serializable",
              "WindowsRuntime",
              "UnicodeClass",
              "AutoClass",
              "StringFormatMask",
              "HasSecurity",
              "ReservedMask",
              "BeforeFieldInit",
              "CustomFormatMask"
            ],
            "type": "string",
            "readOnly": true
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAccountRequest": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "xeroPaymentAccountCode": {
            "type": "string",
            "nullable": true
          },
          "xeroPaymentAccountName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCardRequest": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "authSource": {
            "type": "integer",
            "format": "int32"
          },
          "browserData": {
            "$ref": "#/components/schemas/BrowserData"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "card": {
            "$ref": "#/components/schemas/CardDetails"
          },
          "threeDsPayload": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "processorToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomerRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "tradingName": {
            "type": "string",
            "nullable": true
          },
          "abn": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "suburb": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "optInToComms": {
            "type": "boolean",
            "nullable": true
          },
          "industry": {
            "type": "string",
            "nullable": true
          },
          "accountingSoftware": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomerResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateRecurringRequest": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentAmount": {
            "type": "number",
            "format": "double"
          },
          "paymentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentOption": {
            "enum": [
              "AutoPay",
              "EmailReminder",
              "SmsReminder",
              "FixedTerm",
              "BatchPay",
              "ScheduledPay",
              "OneOff",
              "PayID",
              "BPAY"
            ],
            "type": "string",
            "nullable": true
          },
          "paymentFrequency": {
            "enum": [
              "Weekly",
              "Fortnightly",
              "Monthly",
              "Quarterly",
              "HalfYearly",
              "Yearly",
              "FourWeeks"
            ],
            "type": "string"
          },
          "noOfPayments": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billerReference": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerificationAccountResponse": {
        "type": "object",
        "properties": {
          "isVerified": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyAccountRequest": {
        "type": "object",
        "properties": {
          "verificationCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyDrivingLicenceRequest": {
        "type": "object",
        "properties": {
          "licenceNumber": {
            "type": "string",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "issuingState": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyPassportRequest": {
        "type": "object",
        "properties": {
          "passportNumber": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "issuingCountry": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}